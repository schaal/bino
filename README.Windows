You can build a Windows binary using MinGW.

The easiest way to do this is to use a GNU/Linux system with MXE (the M cross
environment, <http://mxe.cc>). This is because MXE not only provides a recent
version of gcc as a cross compiler, but also all required libraries, and the
nsis package to build an installer.

The stable version of MXE is now far too old to be useful, so please use the
development version instead.

1. Build the required MXE packages in /path/to/mxe:

   $ cd /var/tmp
   $ git clone https://github.com/mxe/mxe.git
   $ cd mxe
   [Edit settings.mk and set MXE_TARGETS to i686-w64-mingw32.static]
   $ make gettext ffmpeg libass openal glew qt nsis

   (Please read the MXE documentation if you have trouble with this step.)

   Add MXE to your PATH:
   $ export PATH="/var/tmp/mxe/usr/bin:/var/tmp/mxe/usr/i686-w64-mingw32.static/qt/bin:$PATH"

2. Build Bino

   $ cd /var/tmp/bino
   $ ./configure --host=i686-w64-mingw32.static --build=`build-aux/config.guess` \
     --with-qt-version=4 LDFLAGS="-Wl,--allow-multiple-definition" CXXFLAGS="-std=gnu++11"
   $ make

   Build the installer:
   $ make package-w32

The installer will install the binary, the manual, and translations along with
start menu entries, and provide uninstall functionality.
